{"ast":null,"code":"import _regeneratorRuntime from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/filipzupancic/kriptal/FazeBetting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/filipzupancic/kriptal/FazeBetting/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport logo from '../logo.png';\nimport './App.css';\nimport bet from '../abis/bet.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, Bet;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = bet.networks[networkId];\n\n                if (networkData) {\n                  Bet = web3.eth.Contract(bet.abi, networkData.address);\n                  console.log(networkData.address);\n                  this.setState({\n                    Bet: Bet\n                  }); // const owner = await Bet.methods.owna().call()\n                  // const totalBets = await Bet.methods.totalBetMoney().call()\n                  // const team1Bets = await Bet.methods.getTotalBetAmount(\"0\").call()\n                  // const team2Bets = await Bet.methods.getTotalBetAmount(\"1\").call()\n                  // console.log(owner.toString())\n                  // console.log(totalBets.toString())\n                  // console.log(team1Bets.toString())\n                  // console.log(team2Bets.toString())\n\n                  this.setState({\n                    loading: false\n                  });\n                } else {\n                  window.alert(\"Bet contract not deployed to detected network\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      totalBetMoney: 0,\n      loading: true\n    };\n    _this.createBet = _this.createBet.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.teamWinDistribution = _this.teamWinDistribution.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"teamWinDistribution\",\n    value: function () {\n      var _teamWinDistribution = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(teamId) {\n        var _this2 = this;\n\n        var totalBets;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context4.next = 3;\n                return this.state.Bet.methods.totalBetMoney().call();\n\n              case 3:\n                totalBets = _context4.sent;\n                totalBets = Number(totalBets);\n                this.state.Bet.methods.teamWinDistribution(teamId).send({\n                  from: this.state.account,\n                  value: window.web3.utils.toBN(totalBets)\n                }).once('receipt', function (receipt) {\n                  _this2.setState({\n                    loading: false\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function teamWinDistribution(_x) {\n        return _teamWinDistribution.apply(this, arguments);\n      }\n\n      return teamWinDistribution;\n    }()\n  }, {\n    key: \"createBet\",\n    value: function createBet(name, teamId, betAmount) {\n      var _this3 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.Bet.methods.createBet(name, teamId).send({\n        from: this.state.account,\n        value: betAmount\n      }).once('receipt', function (receipt) {\n        _this3.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        createBet: this.createBet,\n        teamWinDistribution: this.teamWinDistribution,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/filipzupancic/kriptal/FazeBetting/src/components/App.js"],"names":["React","Component","Web3","logo","bet","Navbar","Main","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","Bet","Contract","abi","address","console","log","loading","props","state","totalBetMoney","createBet","bind","teamWinDistribution","teamId","methods","call","totalBets","Number","send","from","value","utils","toBN","once","receipt","name","betAmount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport logo from '../logo.png';\nimport './App.css';\nimport bet from '../abis/bet.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n  \n  async loadWeb3() {\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n    }\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n    }\n    else {\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n    const networkData = bet.networks[networkId]\n    if (networkData) {\n      const Bet = web3.eth.Contract(bet.abi, networkData.address)\n      console.log(networkData.address)\n      this.setState({ Bet })\n      // const owner = await Bet.methods.owna().call()\n      // const totalBets = await Bet.methods.totalBetMoney().call()\n      // const team1Bets = await Bet.methods.getTotalBetAmount(\"0\").call()\n      // const team2Bets = await Bet.methods.getTotalBetAmount(\"1\").call()\n      // console.log(owner.toString())\n      // console.log(totalBets.toString())\n      // console.log(team1Bets.toString())\n      // console.log(team2Bets.toString())\n\n      this.setState({ loading: false })\n\n    } else {\n      window.alert(\"Bet contract not deployed to detected network\")\n    }\n\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      totalBetMoney: 0,\n      loading: true,\n    }\n\n    this.createBet = this.createBet.bind(this)\n    this.teamWinDistribution = this.teamWinDistribution.bind(this)\n\n  }\n\n  async teamWinDistribution(teamId) {\n    this.setState({ loading: true })\n    var totalBets = await this.state.Bet.methods.totalBetMoney().call()\n    totalBets = Number(totalBets)\n\n    this.state.Bet.methods.teamWinDistribution(teamId).send( { from: this.state.account, value: window.web3.utils.toBN(totalBets)})\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  createBet(name, teamId, betAmount) {\n    this.setState({ loading: true })\n    this.state.Bet.methods.createBet(name, teamId).send( { from: this.state.account, value: betAmount})\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading \n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main createBet = {this.createBet} teamWinDistribution = {this.teamWinDistribution} />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}